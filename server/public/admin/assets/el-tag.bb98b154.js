import{du as F,a1 as y,a5 as R,aB as N,dg as $}from"./index.4ed0f585.js";var D=/\s/;function b(e){for(var n=e.length;n--&&D.test(e.charAt(n)););return n}var P=/^\s+/;function U(e){return e&&e.slice(0,b(e)+1).replace(P,"")}var H=0/0,_=/^[-+]0x[0-9a-f]+$/i,j=/^0b[01]+$/i,w=/^0o[0-7]+$/i,V=parseInt;function L(e){if(typeof e=="number")return e;if(F(e))return H;if(y(e)){var n=typeof e.valueOf=="function"?e.valueOf():e;e=y(n)?n+"":n}if(typeof e!="string")return e===0?e:+e;e=U(e);var t=j.test(e);return t||w.test(e)?V(e.slice(2),t?2:8):_.test(e)?H:+e}var X=function(){return R.Date.now()},I=X,q="Expected a function",z=Math.max,G=Math.min;function K(e,n,t){var a,s,u,o,i,c,l=0,h=!1,m=!1,g=!0;if(typeof e!="function")throw new TypeError(q);n=L(n)||0,y(t)&&(h=!!t.leading,m="maxWait"in t,u=m?z(L(t.maxWait)||0,n):u,g="trailing"in t?!!t.trailing:g);function p(r){var f=a,v=s;return a=s=void 0,l=r,o=e.apply(v,f),o}function T(r){return l=r,i=setTimeout(x,n),h?p(r):o}function M(r){var f=r-c,v=r-l,B=n-f;return m?G(B,u-v):B}function C(r){var f=r-c,v=r-l;return c===void 0||f>=n||f<0||m&&v>=u}function x(){var r=I();if(C(r))return k(r);i=setTimeout(x,M(r))}function k(r){return i=void 0,g&&a?p(r):(a=s=void 0,o)}function O(){i!==void 0&&clearTimeout(i),l=0,a=c=s=i=void 0}function W(){return i===void 0?o:k(I())}function E(){var r=I(),f=C(r);if(a=arguments,s=this,c=r,f){if(i===void 0)return T(c);if(m)return clearTimeout(i),i=setTimeout(x,n),p(c)}return i===void 0&&(i=setTimeout(x,n)),o}return E.cancel=O,E.flush=W,E}const d=new Map;let S;N&&(document.addEventListener("mousedown",e=>S=e),document.addEventListener("mouseup",e=>{for(const n of d.values())for(const{documentHandler:t}of n)t(e,S)}));function A(e,n){let t=[];return Array.isArray(n.arg)?t=n.arg:$(n.arg)&&t.push(n.arg),function(a,s){const u=n.instance.popperRef,o=a.target,i=s==null?void 0:s.target,c=!n||!n.instance,l=!o||!i,h=e.contains(o)||e.contains(i),m=e===o,g=t.length&&t.some(T=>T==null?void 0:T.contains(o))||t.length&&t.includes(i),p=u&&(u.contains(o)||u.contains(i));c||l||h||m||g||p||n.value(a,s)}}const Q={beforeMount(e,n){d.has(e)||d.set(e,[]),d.get(e).push({documentHandler:A(e,n),bindingFn:n.value})},updated(e,n){d.has(e)||d.set(e,[]);const t=d.get(e),a=t.findIndex(u=>u.bindingFn===n.oldValue),s={documentHandler:A(e,n),bindingFn:n.value};a>=0?t.splice(a,1,s):t.push(s)},unmounted(e){d.delete(e)}};export{Q as C,K as d};
