import{d8 as A,a1 as w,a5 as M,aB as O,d9 as W}from"./index.94cff847.js";var F=/\s/;function R(r){for(var e=r.length;e--&&F.test(r.charAt(e)););return e}var N=/^\s+/;function $(r){return r&&r.slice(0,R(r)+1).replace(N,"")}var _=0/0,D=/^[-+]0x[0-9a-f]+$/i,j=/^0b[01]+$/i,P=/^0o[0-7]+$/i,U=parseInt;function z(r){if(typeof r=="number")return r;if(A(r))return _;if(w(r)){var e=typeof r.valueOf=="function"?r.valueOf():r;r=w(e)?e+"":e}if(typeof r!="string")return r===0?r:+r;r=$(r);var l=j.test(r);return l||P.test(r)?U(r.slice(2),l?2:8):D.test(r)?_:+r}var V=function(){return M.Date.now()},k=V,X="Expected a function",q=Math.max,G=Math.min;function K(r,e,l){var t,g,i,c,a,n,v=0,b=!1,u=!1,f=!0;if(typeof r!="function")throw new TypeError(X);e=z(e)||0,w(l)&&(b=!!l.leading,u="maxWait"in l,i=u?q(z(l.maxWait)||0,e):i,f="trailing"in l?!!l.trailing:f);function h(o){var s=t,p=g;return t=g=void 0,v=o,c=r.apply(p,s),c}function m(o){return v=o,a=setTimeout(x,e),b?h(o):c}function H(o){var s=o-n,p=o-v,I=e-s;return u?G(I,i-p):I}function T(o){var s=o-n,p=o-v;return n===void 0||s>=e||s<0||u&&p>=i}function x(){var o=k();if(T(o))return E(o);a=setTimeout(x,H(o))}function E(o){return a=void 0,f&&t?h(o):(t=g=void 0,c)}function L(){a!==void 0&&clearTimeout(a),v=0,t=n=g=a=void 0}function S(){return a===void 0?c:E(k())}function y(){var o=k(),s=T(o);if(t=arguments,g=this,n=o,s){if(a===void 0)return m(n);if(u)return clearTimeout(a),a=setTimeout(x,e),h(n)}return a===void 0&&(a=setTimeout(x,e)),c}return y.cancel=L,y.flush=S,y}const d=new Map;let C;O&&(document.addEventListener("mousedown",r=>C=r),document.addEventListener("mouseup",r=>{for(const e of d.values())for(const{documentHandler:l}of e)l(r,C)}));function B(r,e){let l=[];return Array.isArray(e.arg)?l=e.arg:W(e.arg)&&l.push(e.arg),function(t,g){const i=e.instance.popperRef,c=t.target,a=g==null?void 0:g.target,n=!e||!e.instance,v=!c||!a,b=r.contains(c)||r.contains(a),u=r===c,f=l.length&&l.some(m=>m==null?void 0:m.contains(c))||l.length&&l.includes(a),h=i&&(i.contains(c)||i.contains(a));n||v||b||u||f||h||e.value(t,g)}}const Q={beforeMount(r,e){d.has(r)||d.set(r,[]),d.get(r).push({documentHandler:B(r,e),bindingFn:e.value})},updated(r,e){d.has(r)||d.set(r,[]);const l=d.get(r),t=l.findIndex(i=>i.bindingFn===e.oldValue),g={documentHandler:B(r,e),bindingFn:e.value};t>=0?l.splice(t,1,g):l.push(g)},unmounted(r){d.delete(r)}};export{Q as C,K as d};
